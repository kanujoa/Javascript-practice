1. weather.js 파일을 새로 만들고 이를 HTML과 연동시킨다.(<script src =......> 사용!)


2. 사용자의 위치를 화면에 보여주기 위해 새로운 함수를 써 볼 것이다.
navigator.geolocation.getCurrentPosition();
위처럼 작성하기만 하면 브라우저에서 위치 좌표를 줄 것이다.
getCurrentPosition 함수는 인자를 2개 받는다. 하나는 성공적으로 진행되었을 때 실행될 함수, 다른 하나는
에러가 발생했을 때 실행될 함수이다. 위의 경우 위치를 받는 것의 성공 여부에 따라 실행될 함수가 결정된다.

function onGeoOk(position){     --> onGeoOk 함수는 user의 위치를 인자로 받아 그것을 console 창에 
    console.log(position);                띄워준다.
}
즉, success함수는 GeolocationPosition 객체를 유일한 매개변수로 받는 콜백 함수이다.

function onGeoError(){
    alert("Can't find tou. No weather for you");     --> onGeoError함수는 위치를 찾을 수 없어 날씨를 불러올
}                                                                     수 없다는 경고창을 화면에 띄운다.

navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);     
--> user의 위치를 가져오는 것이 성공적으로 진행되었을 경우 onGeoOk 함수가, 그렇지 않은 경우 onGeoError
     함수가 실행된다.

새로고침을 하면 화면에 이 파일이 사용자의 위치를 파악하려고 한다는 작은 창이 하나 뜬다.
이것을 허용하지 않으면 onGeoError 함수가 실행되어 경고창이 뜬다.
반면 이것을 허용하면 console창에 GeolocationPosition이 떠 있는 것을 볼 수 있다. 내가 있는 곳의 경도와 위도
등이 나와있는 것을 확인할 수 있다. 이를 함수에 코드를 추가하여 얻어보자.
function onGeoOk(position){
    const lat = position.coords.latitude;     --> 위도는 GeolocationPosition 객체에서 coords 안에서 latitude로 나와 있으므로
    const lng = position.coords.longitude;      --> 경도 (GeolocationPosition 객체가 매개변수로 들어가는 것 기억! --> 인자인 position자리에 들어감.) 
    console.log("You live in", lat, lng);
}
새로고침하고 위치 파악 허용하면 console 창에 You live in 37.63031309422643 126.83400299310327 가
뜨게 된다.


3. 이제 이 숫자들을 장소로 바꾸어 주는 작업을 해야 한다. 
우선 openweathermap.org 사이트로 이동한다. 그 후 계정을 생성하고 API 메뉴로 이동하여 자신이 원하는
정보가 있는 API를 보면 된다.
다음 시간에 이어서!!